<html>
   <head>
      <title>JavaScript MQTT WebSocket Example</title>
	 <script src="https://cdnjs.cloudflare.com/ajax/libs/paho-mqtt/1.0.1/mqttws31.min.js" type="text/javascript"></script>
	 <script type = "text/javascript" language = "javascript">
		var mqtt;
		var mqtt_connected=false;
		var reconnectTimeout = 2000;
		var host="test.mosquitto.org";
		var port=8080;
		var topic="HSOSBarn/"
		var cname="HSOS537";


		function sendMessage(message, sub_topic) {

			if(mqtt_connected) {
				mqtt.send(topic + sub_topic, message, 1, true);
				console.log("Send Mqtt-Message: " + message + " to Topic: " + topic + sub_topic);
			}

		}

		// mqtt callback funktionen

		function MQTTonConnected() {
			mqtt_connected = true;
			MQTTSubscribe("door");
			console.log("MQTT connected: " + host);
		}

		function MQTTonConnectionLost() {
			mqtt_connected = false;
			console.log("MQTT connection lost");
		}

		function MQTTonMessageDelivered() {

			console.log("MQTT message delivered");
		}

		function MQTTonMessageArrived(message) {

			if(message.destinationName === topic+"door") {
				document.getElementById("Status").innerHTML = message.payloadString;
			}


			console.log("MQTT message arrived: " + message.payloadString + " destination: " + message.destinationName);
		}

		function MQTTonSubscribeSuccess() {

			console.log("Subscribed!");
		}

		function MQTTonSubscribeFailure() {

			console.log("Subscribing Failed!");
		}

		// mqtt funktionen

		function MQTTinit() {

			mqtt = new Paho.MQTT.Client(host, port, cname);
			mqtt.onConnected = MQTTonConnected;
			mqtt.onConnectionLost = MQTTonConnectionLost;
			mqtt.onMessageDelivered = MQTTonMessageDelivered;
			mqtt.onMessageArrived = MQTTonMessageArrived;

			console.log("Initialized Paho MQTT Client !");

			MQTTupdate();

		}

		function MQTTSubscribe(sub_topic) {

			console.log("subscribing to " + topic + " " + sub_topic);

			var options = {
				timeout: 3,
				onSuccess: MQTTonSubscribeSuccess,
				onFailure: MQTTonSubscribeFailure,
			};

			mqtt.subscribe(topic + sub_topic, options);
		}

	  	function MQTTconnect() {
			console.log("connecting to " + host + " " + port);
		
			var options = {
				timeout: 3,
				onSuccess: MQTTonConnected,
				onFailure: MQTTonConnectionLost,
			};
			
			mqtt.connect(options); 
	  	}

		function MQTTupdate() {

			if(!mqtt_connected)
				MQTTconnect();

			setTimeout(MQTTupdate, 5000);
		}
	 
	  </script>
   </head>
     <body>
   <h1>Main Body Test</h1>
 	<script>
	MQTTinit();
	</script>
	<p id="Status"></p>
	<button onclick="sendMessage('open', 'door')">Open</button>
	<button onclick="sendMessage('close', 'door')">Close</button>
   </body>	
</html>
